name: Build
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Git entire history for all branches and tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix-build

      # - uses: DeterminateSystems/nix-installer-action@main
      #   with:
      #     flakehub: false
      # - run: nix build .
      # - uses: arduino/setup-task@v2
      #   with:
      #     version: 3.x
      #     repo-token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
      - run: nix-shell --run "task version"
      - run: nix-shell --run "task build"
    
      # - uses: google-github-actions/release-please-action@v4
      #   id: release
      #   with:
      #     # this assumes that you have created a personal access token
      #     # (PAT) and configured it as a GitHub action secret named
      #     # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
      #     token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
      #     # this is a built-in strategy in release-please, see "Action Inputs"
      #     # for more options
      #     release-type: simple
      #     config-file: release-please-config.json
      #     manifest-file: .release-please-manifest.json
      # - name: Test build
      #   if: ${{ steps.release.outputs.release_created }}
      #   run: |
      #     echo "THIS IS THE PACKAGE THAT WILL BE BUILT : ${{ steps.release.outputs.tag_name }}"
          

# name: Release New Version

# # Triggers the workflow when a push happens
# on:
#   push:
#     branches:
#       - main

# jobs:
#   release:
#     runs-on: ubuntu-latest

#     name: Release

#     steps:
#       - name: Fetch Git entire history for all branches and tags
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Use Node v18
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install Dependencies
#         run: npm install

#       - name: Run Semantic Release
#         run: nxp semantic release
